@import url('https://fonts.googleapis.com/css2?family=Montserrat:wght@400;700&display=swap');

body {
    font-family: 'Montserrat', sans-serif;
    background: #1a1a2e;
    color: #e0e0e0;
    margin: 0;
    display: flex;
    justify-content: center;
    align-items: center;
    min-height: 100vh;
    text-align: center;
}

#game-container, #admin-container {
    width: 90%;
    max-width: 1200px;
}

h1, h2 {
    color: #e94560;
    font-weight: 700;
}

.prompt {
    font-size: 2.5em;
    margin: 20px 0;
    line-height: 1.4;
}

.waiting-text {
    font-size: 2em;
    color: #f0f0f0;
    animation: pulse 2s infinite;
}

.card {
    background: #16213e;
    border: 2px solid #0f3460;
    border-radius: 10px;
    padding: 20px;
    margin: 10px;
    font-size: 1.5em;
    transition: transform 0.3s ease, box-shadow 0.3s ease;
}

.card.real-answer {
    border-color: #50c878; /* Green for the real answer */
    box-shadow: 0 0 15px #50c878;
}

.voting-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    gap: 20px;
    margin-top: 30px;
}

/* --- Admin Specific Styles --- */
#admin-controls {
    background: #16213e;
    padding: 30px;
    border-radius: 15px;
    box-shadow: 0 0 20px rgba(0,0,0,0.5);
}

.admin-section {
    margin-bottom: 30px;
}

input[type="text"], textarea {
    width: 80%;
    padding: 10px;
    font-size: 1em;
    background: #0f3460;
    border: 1px solid #e94560;
    border-radius: 5px;
    color: #e0e0e0;
    margin-top: 10px;
}

button {
    background: #e94560;
    color: #fff;
    border: none;
    padding: 15px 30px;
    font-size: 1.2em;
    font-weight: 700;
    border-radius: 5px;
    cursor: pointer;
    transition: background 0.3s ease;
    margin: 10px;
}

button:hover {
    background: #c73049;
}

.player-answers-input {
    display: flex;
    align-items: center;
    justify-content: center;
    margin-bottom: 10px;
}

.player-answers-input input {
    flex-grow: 1;
    max-width: 400px;
}

.answer-list .card {
    display: flex;
    justify-content: space-between;
    align-items: center;
}

.answer-list .card-number {
    font-weight: bold;
    color: #e94560;
    margin-right: 20px;
}

/* --- Animations --- */
@keyframes pulse {
    0% { transform: scale(1); opacity: 0.7; }
    50% { transform: scale(1.05); opacity: 1; }
    100% { transform: scale(1); opacity: 0.7; }
}```

---

#### **`static/js/main.js`** (Viewer's JavaScript)

```javascript
document.addEventListener('DOMContentLoaded', () => {
    const socket = io();
    const gameContainer = document.getElementById('game-container');

    socket.on('game_update', (state) => {
        updateView(state);
    });

    function updateView(state) {
        gameContainer.innerHTML = ''; // Clear previous content

        if (state.stage === 'waiting') {
            const waitingText = document.createElement('h2');
            waitingText.className = 'waiting-text';
            waitingText.textContent = 'Waiting for the next round...';
            gameContainer.appendChild(waitingText);
        } else if (state.stage === 'answering') {
            const promptText = document.createElement('h2');
            promptText.className = 'prompt';
            promptText.textContent = state.prompt;
            gameContainer.appendChild(promptText);
        } else if (state.stage === 'voting') {
            const promptText = document.createElement('h2');
            promptText.className = 'prompt';
            promptText.textContent = state.prompt;
            gameContainer.appendChild(promptText);

            const votingGrid = document.createElement('div');
            votingGrid.className = 'voting-grid';

            state.answers.forEach((answer, index) => {
                const card = document.createElement('div');
                card.className = 'card';
                card.innerHTML = `<span class="card-number">${index + 1}.</span> ${answer}`;
                votingGrid.appendChild(card);
            });
            gameContainer.appendChild(votingGrid);
        }
    }
});